Deleting rows, based on column value:

hpx=> delete from calibratedframes where fits='/nfs/phtess1/ar1/HATPI/HP0/RED/projid12-G577-ccd8-sdssr/1-423888e_8.fits';


counting rows:

select count(*) from calibratedframes;


----------

POSTGRES DB MANAGEMENT:

hpx=> select state, count(*) from pg_stat_activity group by state ;

----------

For Gaia querying:

I have a list of N members and member candidates in a young open cluster
further than 300 pc... I want to obtain the parallaxes, proper motions,
broad-band photometry and accurate coordinates of all of them in the Gaia
dataset (GDAS-GA-01)

This scenario illustrates several features of the Gaia Archive Core Systems
user interface in a 3-stage workflow that includes a final ADQL query. There
are several ways to approach this but the easiest is to make use of the user
table upload feature of the Gaia archive, the use of which requires the user to
be registered and to log in their session as opposed to querying anonymously.
Then, step 1 is to upload the list of cluster candidates using the "Upload user
table" gadget actioned via the button on the top-left of the search tab (disk
icon with upward pointing arrow). Available upload formats are VOTable, or
space- or comma-separated text (ASCII or CSV). Step 2 is to crossmatch this
with the relevant Gaia data table - in DR1, full astrometry is provided for
Tycho-Gaia Astrometric Solution (TGAS) sources only, so action a crossmatch
using the "Cross-match tables" gadget (third button along on the search tab,
double star icon) between the user table and tags_source. At both stages 1 and
2 a results table will appear in the table browser under "User tables".
Finally, a selection can then be made in ADQL between the two matched tables in
conjunction with the crossmatch table:


```
SELECT x.dist*3600.0 AS distArcsec, * FROM user_xyz.table1 AS t1,
gaiadr1.tgas_source AS t2, user_xyz.xmatch_tgas_source_table1 AS x WHERE
t1.table1_oid = x.table1_table1_oid AND t2.source_id = x.tgas_source_source_id
ORDER BY t1.table1_oid, x.dist
```

Upload list of IDs (positions ?) then match to complete source to get gaia
information.  Put the match ids in a myids table then .. Select
c.id,c.varpi,c.ra,c.dec from completesource where id in (select id from mylist)

....
